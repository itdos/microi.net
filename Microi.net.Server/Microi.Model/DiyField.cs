//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Dos.ORM;

namespace Microi.net
{
    /// <summary>
    /// 实体类DiyField。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    [Table("diy_field")]
    [Serializable]
    public partial class DiyField : Entity
    {
        #region Model
		private string _Id;
		private string _TableId;
		private string _Label;
		private string _Name;
		private int _NameConfirm;
		private string _Type;
		private string _Code;
		private string _Component;
		private string _Description;
		private int _NotEmpty;
		private int _Visible;
		private int _AppVisible;
        private int _Readonly;
		private DateTime _CreateTime;
		private DateTime? _UpdateTime;
		private string _UserId;
		private int _Sort;
		private string _Tab;
		private string _OsClient;
		private int _IsDeleted;
		private string _Data;
		private string _Config;
		private int? _FormWidth;
		private int? _TableWidth;
		private string _DefaultValue;
		private int _Unique;
		private string _BindRole;
		private string _V8TmpEngineTable;
		private string _V8TmpEngineForm;
		private string _Placeholder;
		private string _Remark;
		private string _DataAppend;
		private int _InTableEdit;
		private string _KeyupV8Code;
		private int _IsLockField;
		private int? _Encrypt;
		private string _UserName;

		/// <summary>
		/// Id
		/// </summary>
		[Field("Id")]
		public string Id
		{
			get{ return _Id; }
			set
			{
				this.OnPropertyValueChange("Id");
				this._Id = value;
			}
		}
		/// <summary>
		/// TableId
		/// </summary>
		[Field("TableId")]
		public string TableId
		{
			get{ return _TableId; }
			set
			{
				this.OnPropertyValueChange("TableId");
				this._TableId = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Label")]
		public string Label
		{
			get{ return _Label; }
			set
			{
				this.OnPropertyValueChange("Label");
				this._Label = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Name")]
		public string Name
		{
			get{ return _Name; }
			set
			{
				this.OnPropertyValueChange("Name");
				this._Name = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("NameConfirm")]
		public int NameConfirm
		{
			get{ return _NameConfirm; }
			set
			{
				this.OnPropertyValueChange("NameConfirm");
				this._NameConfirm = value;
			}
		}
		/// <summary>
		/// 字段类型
		/// </summary>
		[Field("Type")]
		public string Type
		{
			get{ return _Type; }
			set
			{
				this.OnPropertyValueChange("Type");
				this._Type = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Code")]
		public string Code
		{
			get{ return _Code; }
			set
			{
				this.OnPropertyValueChange("Code");
				this._Code = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Component")]
		public string Component
		{
			get{ return _Component; }
			set
			{
				this.OnPropertyValueChange("Component");
				this._Component = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Description")]
		public string Description
		{
			get{ return _Description; }
			set
			{
				this.OnPropertyValueChange("Description");
				this._Description = value;
			}
		}
		/// <summary>
		/// 是否必填
		/// </summary>
		[Field("NotEmpty")]
		public int NotEmpty
		{
			get{ return _NotEmpty; }
			set
			{
				this.OnPropertyValueChange("NotEmpty");
				this._NotEmpty = value;
			}
		}
		/// <summary>
		/// 是否可见
		/// </summary>
		[Field("Visible")]
		public int Visible
		{
			get{ return _Visible; }
			set
			{
				this.OnPropertyValueChange("Visible");
				this._Visible = value;
			}
		}

        /// <summary>
        /// 是否可见
        /// </summary>
        [Field("AppVisible")]
        public int AppVisible
        {
            get { return _AppVisible; }
            set
            {
                this.OnPropertyValueChange("AppVisible");
                this._AppVisible = value;
            }
        }
        /// <summary>
        /// 是否只读
        /// </summary>
        [Field("Readonly")]
		public int Readonly
		{
			get{ return _Readonly; }
			set
			{
				this.OnPropertyValueChange("Readonly");
				this._Readonly = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("CreateTime")]
		public DateTime CreateTime
		{
			get{ return _CreateTime; }
			set
			{
				this.OnPropertyValueChange("CreateTime");
				this._CreateTime = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("UpdateTime")]
		public DateTime? UpdateTime
		{
			get{ return _UpdateTime; }
			set
			{
				this.OnPropertyValueChange("UpdateTime");
				this._UpdateTime = value;
			}
		}
		/// <summary>
		/// UserId
		/// </summary>
		[Field("UserId")]
		public string UserId
		{
			get{ return _UserId; }
			set
			{
				this.OnPropertyValueChange("UserId");
				this._UserId = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Sort")]
		public int Sort
		{
			get{ return _Sort; }
			set
			{
				this.OnPropertyValueChange("Sort");
				this._Sort = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Tab")]
		public string Tab
		{
			get{ return _Tab; }
			set
			{
				this.OnPropertyValueChange("Tab");
				this._Tab = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("OsClient")]
		public string OsClient
		{
			get{ return _OsClient; }
			set
			{
				this.OnPropertyValueChange("OsClient");
				this._OsClient = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("IsDeleted")]
		public int IsDeleted
		{
			get{ return _IsDeleted; }
			set
			{
				this.OnPropertyValueChange("IsDeleted");
				this._IsDeleted = value;
			}
		}
		/// <summary>
		/// 数据
		/// </summary>
		[Field("Data")]
		public string Data
		{
			get{ return _Data; }
			set
			{
				this.OnPropertyValueChange("Data");
				this._Data = value;
			}
		}
		/// <summary>
		/// 配置
		/// </summary>
		[Field("Config")]
		public string Config
		{
			get{ return _Config; }
			set
			{
				this.OnPropertyValueChange("Config");
				this._Config = value;
			}
		}
		/// <summary>
		/// 在表单中的宽度。传入24、12、8
		/// </summary>
		[Field("FormWidth")]
		public int? FormWidth
		{
			get{ return _FormWidth; }
			set
			{
				this.OnPropertyValueChange("FormWidth");
				this._FormWidth = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("TableWidth")]
		public int? TableWidth
		{
			get{ return _TableWidth; }
			set
			{
				this.OnPropertyValueChange("TableWidth");
				this._TableWidth = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("DefaultValue")]
		public string DefaultValue
		{
			get{ return _DefaultValue; }
			set
			{
				this.OnPropertyValueChange("DefaultValue");
				this._DefaultValue = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Unique")]
		public int Unique
		{
			get{ return _Unique; }
			set
			{
				this.OnPropertyValueChange("Unique");
				this._Unique = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("BindRole")]
		public string BindRole
		{
			get{ return _BindRole; }
			set
			{
				this.OnPropertyValueChange("BindRole");
				this._BindRole = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("V8TmpEngineTable")]
		public string V8TmpEngineTable
		{
			get{ return _V8TmpEngineTable; }
			set
			{
				this.OnPropertyValueChange("V8TmpEngineTable");
				this._V8TmpEngineTable = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("V8TmpEngineForm")]
		public string V8TmpEngineForm
		{
			get{ return _V8TmpEngineForm; }
			set
			{
				this.OnPropertyValueChange("V8TmpEngineForm");
				this._V8TmpEngineForm = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Placeholder")]
		public string Placeholder
		{
			get{ return _Placeholder; }
			set
			{
				this.OnPropertyValueChange("Placeholder");
				this._Placeholder = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Remark")]
		public string Remark
		{
			get{ return _Remark; }
			set
			{
				this.OnPropertyValueChange("Remark");
				this._Remark = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("DataAppend")]
		public string DataAppend
		{
			get{ return _DataAppend; }
			set
			{
				this.OnPropertyValueChange("DataAppend");
				this._DataAppend = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("InTableEdit")]
		public int InTableEdit
		{
			get{ return _InTableEdit; }
			set
			{
				this.OnPropertyValueChange("InTableEdit");
				this._InTableEdit = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("KeyupV8Code")]
		public string KeyupV8Code
		{
			get{ return _KeyupV8Code; }
			set
			{
				this.OnPropertyValueChange("KeyupV8Code");
				this._KeyupV8Code = value;
			}
		}
		/// <summary>
		/// 是否锁定字段名称和类型
		/// </summary>
		[Field("IsLockField")]
		public int IsLockField
		{
			get{ return _IsLockField; }
			set
			{
				this.OnPropertyValueChange("IsLockField");
				this._IsLockField = value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		[Field("Encrypt")]
		public int? Encrypt
		{
			get{ return _Encrypt; }
			set
			{
				this.OnPropertyValueChange("Encrypt");
				this._Encrypt = value;
			}
		}
		/// <summary>
		/// 操作人
		/// </summary>
		[Field("UserName")]
		public string UserName
		{
			get{ return _UserName; }
			set
			{
				this.OnPropertyValueChange("UserName");
				this._UserName = value;
			}
		}
		#endregion

		#region Method
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.Id,
			};
        }
        /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {
				_.Id,
				_.TableId,
				_.Label,
				_.Name,
				_.NameConfirm,
				_.Type,
				_.Code,
				_.Component,
				_.Description,
				_.NotEmpty,
				_.Visible,
				_.AppVisible,
                _.Readonly,
				_.CreateTime,
				_.UpdateTime,
				_.UserId,
				_.Sort,
				_.Tab,
				_.OsClient,
				_.IsDeleted,
				_.Data,
				_.Config,
				_.FormWidth,
				_.TableWidth,
				_.DefaultValue,
				_.Unique,
				_.BindRole,
				_.V8TmpEngineTable,
				_.V8TmpEngineForm,
				_.Placeholder,
				_.Remark,
				_.DataAppend,
				_.InTableEdit,
				_.KeyupV8Code,
				_.IsLockField,
				_.Encrypt,
				_.UserName,
			};
        }
        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {
				this._Id,
				this._TableId,
				this._Label,
				this._Name,
				this._NameConfirm,
				this._Type,
				this._Code,
				this._Component,
				this._Description,
				this._NotEmpty,
				this._Visible,
				this._AppVisible,
                this._Readonly,
				this._CreateTime,
				this._UpdateTime,
				this._UserId,
				this._Sort,
				this._Tab,
				this._OsClient,
				this._IsDeleted,
				this._Data,
				this._Config,
				this._FormWidth,
				this._TableWidth,
				this._DefaultValue,
				this._Unique,
				this._BindRole,
				this._V8TmpEngineTable,
				this._V8TmpEngineForm,
				this._Placeholder,
				this._Remark,
				this._DataAppend,
				this._InTableEdit,
				this._KeyupV8Code,
				this._IsLockField,
				this._Encrypt,
				this._UserName,
			};
        }
        /// <summary>
        /// 是否是v1.10.5.6及以上版本实体。
        /// </summary>
        /// <returns></returns>
        public override bool V1_10_5_6_Plus()
        {
            return true;
        }
        #endregion

		#region _Field
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*", "diy_field");
            /// <summary>
			/// Id
			/// </summary>
			public readonly static Field Id = new Field("Id", "diy_field", "Id");
            /// <summary>
			/// TableId
			/// </summary>
			public readonly static Field TableId = new Field("TableId", "diy_field", "TableId");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Label = new Field("Label", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Name = new Field("Name", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field NameConfirm = new Field("NameConfirm", "diy_field", "");
            /// <summary>
			/// 字段类型
			/// </summary>
			public readonly static Field Type = new Field("Type", "diy_field", "字段类型");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Code = new Field("Code", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Component = new Field("Component", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Description = new Field("Description", "diy_field", "");
            /// <summary>
			/// 是否必填
			/// </summary>
			public readonly static Field NotEmpty = new Field("NotEmpty", "diy_field", "是否必填");
            /// <summary>
			/// 是否可见
			/// </summary>
			public readonly static Field Visible = new Field("Visible", "diy_field", "是否可见");
			public readonly static Field AppVisible = new Field("AppVisible", "diy_field", "App端是否可见");
            /// <summary>
			/// 是否只读
			/// </summary>
			public readonly static Field Readonly = new Field("Readonly", "diy_field", "是否只读");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field CreateTime = new Field("CreateTime", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field UpdateTime = new Field("UpdateTime", "diy_field", "");
            /// <summary>
			/// UserId
			/// </summary>
			public readonly static Field UserId = new Field("UserId", "diy_field", "UserId");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Sort = new Field("Sort", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Tab = new Field("Tab", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field OsClient = new Field("OsClient", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field IsDeleted = new Field("IsDeleted", "diy_field", "");
            /// <summary>
			/// 数据
			/// </summary>
			public readonly static Field Data = new Field("Data", "diy_field", "数据");
            /// <summary>
			/// 配置
			/// </summary>
			public readonly static Field Config = new Field("Config", "diy_field", "配置");
            /// <summary>
			/// 在表单中的宽度。传入24、12、8
			/// </summary>
			public readonly static Field FormWidth = new Field("FormWidth", "diy_field", "在表单中的宽度。传入24、12、8");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field TableWidth = new Field("TableWidth", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field DefaultValue = new Field("DefaultValue", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Unique = new Field("Unique", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field BindRole = new Field("BindRole", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field V8TmpEngineTable = new Field("V8TmpEngineTable", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field V8TmpEngineForm = new Field("V8TmpEngineForm", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Placeholder = new Field("Placeholder", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Remark = new Field("Remark", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field DataAppend = new Field("DataAppend", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field InTableEdit = new Field("InTableEdit", "diy_field", "");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field KeyupV8Code = new Field("KeyupV8Code", "diy_field", "");
            /// <summary>
			/// 是否锁定字段名称和类型
			/// </summary>
			public readonly static Field IsLockField = new Field("IsLockField", "diy_field", "是否锁定字段名称和类型");
            /// <summary>
			/// 
			/// </summary>
			public readonly static Field Encrypt = new Field("Encrypt", "diy_field", "");
            /// <summary>
			/// 操作人
			/// </summary>
			public readonly static Field UserName = new Field("UserName", "diy_field", "操作人");
        }
        #endregion
	}
}